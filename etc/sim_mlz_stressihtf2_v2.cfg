[node stressihtf2]
description = [sim] Stressihtf2 box of MLZ Sample environment group
	.
	Controls an High Temperature Furnace with an Eurotherm and an PLC controlling some valves and checking cooling water.

meaning={'T_regulation':{'T':100}, 'T_sample':{'T_sample':100}}

[interface tcp]
interface=tcp
bindto=0.0.0.0
bindport=10767
# protocol to use for this interface
framing=eol
encoding=secop

[module T]
class=secop.simulation.SimDrivable
.description=Main temperature control node of Stressihtf2.
value.unit='degC'
value.default=20
target.datatype=["double", 0, 2000]
target.default=20
target.unit='degC'
.extra_params=ramp,regulationmode,abslimits,userlimits
ramp.datatype=["double",0,600]
ramp.description=target ramping speed in K/min.
ramp.default=60
ramp.unit=K/min
abslimits.datatype=["tuple",[["double"],["double"]]]
abslimits.default=[0,2000]
abslimits.description=currently active absolute limits for the setpoint. depend on the regulationmode parameter (both/stick->0..600, tube->0..300K).
abslimits.unit='degC'
abslimits.readonly=True
userlimits.datatype=["tuple",[["double"],["double"]]]
userlimits.default=[0,300]
userlimits.description=current user set limits for the setpoint. must be inside abslimits.
userlimits.unit='degC'

[module T_sample]
class=secop.simulation.SimReadable
.description=(optional) Sample temperature sensor.
.visibility=expert
value.default=300
value.unit='degC'

[module N2]
class=secop.simulation.SimWritable
.description=Switches the N2 gas inlet on or off.
.visibility=expert
value.default='off'
value.datatype=["enum", {'off':0,'on':1}]
target.datatype=["enum", {'off':0,'on':1}]
target.default='off'

[module He]
class=secop.simulation.SimWritable
.description=Switches the He gas inlet on or off.
.visibility=expert
value.default='off'
value.datatype=["enum", {'off':0,'on':1}]
target.datatype=["enum", {'off':0,'on':1}]
target.default='off'

[module lamps]
class=secop.simulation.SimWritable
.description=Switches the heating lamps on or off.
.visibility=expert
value.default='on'
value.datatype=["enum", {'off':0,'on':1}]
target.datatype=["enum", {'off':0,'on':1}]
target.default='on'

[module water_ok]
class=secop.simulation.SimReadable
.description=Readout of the cooling water state.
.visibility=expert
value.default='ok'
value.datatype=["enum", {'failed':0,'ok':1}]

