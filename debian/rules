#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

DEBPYTHON_DEFAULT=3.6
DEBPYTHON_SUPPORTED=3.6

export DEBPYTHON_DEFAULT DEBPYTHON_SUPPORTED

override_dh_install:
	@find debian/tmp -name '*.pyc' -exec rm \{\} \;
	@find debian/tmp -type d -name '__pycache__' | xargs rmdir

	@echo "regen debian/secop-core.install"
	@echo "usr/bin/secop-server" > debian/secop-core.install
	@echo "usr/bin/secop-console" >> debian/secop-core.install
	@echo "etc/init.d/secop-server" >> debian/secop-core.install
	@(cd debian/tmp; find . -name '*.py'| grep -v gui|grep /secop/; \
		find . | grep egg-info; \
		find . | grep RELEASE-VERSION; \
		find ./lib; \
		find ./var ) | \
		while read f;do echo $${f#./};done | cat >> debian/secop-core.install

	@echo "regen debian/secop-gui.install"
	@echo "usr/bin/secop-gui" > debian/secop-gui.install
	@echo "usr/bin/secop-cfg-editor" >> debian/secop-gui.install
	@(cd debian/tmp; find . |grep gui|grep /secop/) | \
		while read f;do echo $${f#./};done | cat >> debian/secop-gui.install

	@for facility in demo ess mlz psi;do \
		echo "regen debian/secop-$${facility}.install"; \
	(cd debian/tmp; find . -name '*.py'|grep /secop_$${facility}/) | \
		while read f;do echo $${f#./};done | cat > debian/secop-$${facility}.install; \
	done

	dh_install -i -O--buildsystem=pybuild
	dh_missing --fail-missing

%:
	dh $@ --with python3 --buildsystem=pybuild
